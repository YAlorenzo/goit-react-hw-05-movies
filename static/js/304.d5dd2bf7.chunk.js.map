{"version":3,"file":"static/js/304.d5dd2bf7.chunk.js","mappings":"0NACA,GAAgB,UAAY,yBAAyB,WAAa,0BAA0B,UAAY,yBAAyB,aAAe,4BAA4B,UAAY,yBAAyB,KAAO,oBAAoB,YAAc,4B,SCuF1P,MApFA,WACI,IAAIA,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACf,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACQC,GAAcC,EAAAA,EAAAA,MAAdD,UAkCR,OAhCAE,EAAAA,EAAAA,YAAU,gBACYC,IAAdH,GACAI,MAAM,mDAAD,OAAoDJ,EAApD,8CACJK,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,IACbF,MAAK,SAAAG,GACFT,EAAUS,EAAMC,QACnB,IACAC,OAAM,SAAAC,GACHC,QAAQC,IAAIF,EACf,GAER,GAAC,CAACX,KAsBC,iBAAKc,UAAWC,EAAAA,UAAhB,WACI,kBAAMD,UAAWC,EAAAA,KAAUC,SArBf,SAACC,GAChBL,QAAQC,IAAI,oDACbI,EAAKC,iBACL,IACMC,EADOF,EAAKG,cACAC,SAASF,KAAKG,MAChClB,MAAM,mDAAD,OAAoDe,EAApD,8CACAd,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,IACbF,MAAK,SAAAG,GACFT,EAAUS,EAAMC,SAChBG,QAAQC,IAAIL,EAAMC,QACrB,IACAC,OAAM,SAAAC,GACHC,QAAQC,IAAIF,EACf,IACLlB,EAAS8B,OAASJ,EAClBxB,EAASF,EAAS8B,QAClB5B,EAAS,UAAD,OAAWF,EAAS8B,QAC/B,EAIO,WACG,SAAC,KAAD,CAAMC,GAAI,IAAV,UACC,mBAAQC,KAAK,SAASX,UAAWC,EAAAA,YAAjC,wBAEA,kBAAOD,UAAWC,EAAAA,aACdW,KAAK,OACLD,KAAK,OACLE,aAAa,MACbC,WAAS,EACTC,YAAY,qBAGpB,eAAIf,UAAWC,EAAAA,WAAf,SACCjB,EAAOgC,KAAI,YAAgC,IAA7BC,EAA4B,EAA5BA,GAAIC,EAAwB,EAAxBA,YACTC,GADiC,EAAXC,MAClB,6CAAyCF,IAEnD,OACI,SAAC,KAAD,CAAMR,GAAE,kBAAaO,GAAejB,UAAWC,EAAAA,KAA/C,UACI,eAAIgB,GAAIA,EAAajB,UAAWC,EAAAA,UAAhC,SACqB,OAAhBiB,GACG,gBAAKlB,UAAWC,EAAAA,UAAhB,8BAKJ,gBAAKoB,IAAKF,EAAMG,IAAI,eAAeC,MAAM,MAAMC,OAAO,SAPzCP,IADWA,EAelC,QAWjB,C","sources":["webpack://react-homework-template/./src/pages/moviesPage/movie.module.css?808c","pages/moviesPage/Movies.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"movie_container__Vb3vx\",\"list_movie\":\"movie_list_movie__z3tLx\",\"list_item\":\"movie_list_item__WfLC7\",\"input_search\":\"movie_input_search__VWBXY\",\"no_poster\":\"movie_no_poster__-9rsQ\",\"link\":\"movie_link__NkYYA\",\"button_home\":\"movie_button_home__A1qq0\"};","import { useEffect, useState } from \"react\";\n\nimport { Link, useLocation, useNavigate, useParams } from \"react-router-dom\";\nimport css from \"./movie.module.css\";\nfunction Movies() {\n    let location = useLocation();\n    let navigete = useNavigate();\n    const [movies, setMovies] = useState([]);\n    const { movieName } = useParams();\n\n    useEffect(() => {\n        if (movieName !== undefined) {\n            fetch(`https://api.themoviedb.org/3/search/movie?query=${movieName}&api_key=f95d72194aa7d46701b715dc087a6994`)\n            .then(response => response.json())\n            .then(posts => {\n                setMovies(posts.results);\n            })\n            .catch(error => {\n                console.log(error)\n            })\n        }\n    },[movieName])\n     \n    const searchMovie = (evnt) => {\n         console.log('отправил')\n        evnt.preventDefault();\n        const form = evnt.currentTarget;\n        const text = form.elements.text.value;\n        fetch(`https://api.themoviedb.org/3/search/movie?query=${text}&api_key=f95d72194aa7d46701b715dc087a6994`)\n            .then(response => response.json())\n            .then(posts => {\n                setMovies(posts.results);\n                console.log(posts.results);\n            })\n            .catch(error => {\n                console.log(error)\n            }) \n        location.search = text;\n        navigete(location.search);\n        navigete(`query=/${location.search}`)\n    }\n    \n    return (\n        <div className={css.container}>\n            <form className={css.form} onSubmit={searchMovie}>  \n               <Link to={'/'}>\n                <button type=\"button\" className={css.button_home}>Go Back</button>\n            </Link> \n                <input className={css.input_search}\n                    name=\"text\"\n                    type=\"text\"\n                    autocomplete=\"off\"\n                    autofocus\n                    placeholder=\"Search movie\"\n                />\n            </form>   \n            <ul className={css.list_movie}>\n            {movies.map(({ id, poster_path, title}) => {\n                const link = `https://image.tmdb.org/t/p/original${poster_path}`\n                \n                return (\n                    <Link to={`/movies/${id}`} key={id} className={css.link}>\n                        <li id={id} key={id} className={css.list_item}>\n                            {poster_path === null ? (\n                                <div className={css.no_poster}>\n                                    Opps, no poster\n                               </div>\n                            )\n                                : (\n                            <img src={link} alt=\"movie_poster\" width='300' height='360'/>\n                            )\n                            }\n                    \n                      </li>\n                    </Link>\n                 \n                )})\n                    }\n                     </ul>   \n           \n        \n    \n        </div>\n\n       \n        \n    )\n}\nexport default Movies"],"names":["location","useLocation","navigete","useNavigate","useState","movies","setMovies","movieName","useParams","useEffect","undefined","fetch","then","response","json","posts","results","catch","error","console","log","className","css","onSubmit","evnt","preventDefault","text","currentTarget","elements","value","search","to","type","name","autocomplete","autofocus","placeholder","map","id","poster_path","link","title","src","alt","width","height"],"sourceRoot":""}